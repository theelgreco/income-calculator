name: Build, Push, Deploy Fidelio API

on:
    push:
        branches:
            - main
            - staging
        paths:
            - "backend/**"
    workflow_dispatch:

jobs:
    deploy-prod:
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        environment: production
        permissions:
            contents: read
            packages: write

        steps:
            - uses: actions/checkout@v4

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push prod image
              uses: docker/build-push-action@v5
              with:
                  context: ./backend
                  push: true
                  tags: ghcr.io/${{ github.repository }}/backend:latest

            - name: Copy docker-compose.yml to VPS
              uses: appleboy/scp-action@v1.0.0
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_SSH_KEY }}
                  source: "backend/docker-compose.yml"
                  target: "/${{ secrets.VPS_USER }}/production/"
                  overwrite: true
                  strip_components: 1

            - name: Deploy on VPS (production)
              uses: appleboy/ssh-action@v1.1.0
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_SSH_KEY }}
                  script: |
                      export DATABASE_URL=${{ secrets.ENV_DATABASE_URL }}
                      export JWT_KEY=${{ secrets.ENV_JWT_KEY }}
                      export EMAIL_HOST=${{ secrets.ENV_EMAIL_HOST }}
                      export EMAIL_PORT=${{ secrets.ENV_EMAIL_PORT }}
                      export EMAIL_SECURE=${{ secrets.ENV_EMAIL_SECURE }}
                      export EMAIL_PASSWORD=${{ secrets.ENV_EMAIL_PASSWORD }}

                      export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
                      export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
                      export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
                      export API_PORT=${{ vars.API_PORT }}
                      export NODE_ENV=${{ vars.NODE_ENV }}
                      export API_CONTAINER_NAME=${{ vars.API_CONTAINER_NAME }}
                      export GITHUB_REPO=${{ github.repository }}
                      export DOCKER_NETWORK_NAME=${{ vars.DOCKER_NETWORK_NAME }}

                      docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.VPS_GHCR_PAT }}

                      docker compose -f /${{ secrets.VPS_USER }}/production/docker-compose.yml pull
                      docker compose -f /${{ secrets.VPS_USER }}/production/docker-compose.yml config
                      docker compose -f /${{ secrets.VPS_USER }}/production/docker-compose.yml up -d

                      docker image prune -af

    deploy-staging:
        if: github.ref == 'refs/heads/staging'
        runs-on: ubuntu-latest
        environment: staging
        permissions:
            contents: read
            packages: write

        steps:
            - uses: actions/checkout@v4

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push staging image
              uses: docker/build-push-action@v5
              with:
                  context: ./backend
                  push: true
                  tags: ghcr.io/${{ github.repository }}/backend:staging

            - name: Copy docker-compose.yml to VPS
              uses: appleboy/scp-action@v1.0.0
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_SSH_KEY }}
                  source: "backend/docker-compose.yml"
                  target: "/${{ secrets.VPS_USER }}/projects/fidelio/"
                  overwrite: true
                  strip_components: 1

            - name: Deploy on VPS (staging)
              uses: appleboy/ssh-action@v1.1.0
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_SSH_KEY }}
                  script: |
                      export DATABASE_URL=${{ secrets.ENV_DATABASE_URL }}
                      export JWT_KEY=${{ secrets.ENV_JWT_KEY }}
                      export EMAIL_HOST=${{ secrets.ENV_EMAIL_HOST }}
                      export EMAIL_PORT=${{ secrets.ENV_EMAIL_PORT }}
                      export EMAIL_SECURE=${{ secrets.ENV_EMAIL_SECURE }}
                      export EMAIL_PASSWORD=${{ secrets.ENV_EMAIL_PASSWORD }}

                      export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
                      export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
                      export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
                      export API_PORT=${{ vars.API_PORT }}
                      export NODE_ENV=${{ vars.NODE_ENV }}
                      export API_CONTAINER_NAME=${{ vars.API_CONTAINER_NAME }}
                      export GITHUB_REPO=${{ github.repository }}
                      export DOCKER_NETWORK_NAME=${{ vars.DOCKER_NETWORK_NAME }}

                      docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.VPS_GHCR_PAT }}

                      docker compose -f /${{ secrets.VPS_USER }}/projects/fidelio/docker-compose.yml pull
                      docker compose -f /${{ secrets.VPS_USER }}/projects/fidelio/docker-compose.yml config
                      docker compose -f /${{ secrets.VPS_USER }}/projects/fidelio/docker-compose.yml up -d

                      docker image prune -af
